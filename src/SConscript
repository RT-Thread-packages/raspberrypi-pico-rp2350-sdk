import rtconfig
Import('RTT_ROOT')
from building import *

# get current directory
cwd = GetCurrentDir()
src = []
path = []


# Add CMSIS source files and header files' path



src += Split("""
rp2_common/cmsis/stub/CMSIS/Device/RP2350/Source/system_RP2350.c
""")
path += [
  cwd + '/rp2_common/cmsis/stub/CMSIS/Core/Include',
  cwd + '/rp2_common/cmsis/stub/CMSIS/Device/RP2350/Include',
  ]


# The set of source files associated with this SConscript file.
src += Split("""
rp2_common/pico_stdlib/stdlib.c
rp2_common/hardware_gpio/gpio.c
rp2350/pico_platform/platform.c
rp2_common/pico_platform_panic/panic.c
common/hardware_claim/claim.c
rp2_common/hardware_sync/sync.c
rp2_common/hardware_sync_spin_lock/sync_spin_lock.c
rp2_common/hardware_irq/irq.c
rp2_common/hardware_irq/irq_handler_chain.S
common/pico_sync/sem.c
common/pico_sync/lock_core.c
common/pico_sync/mutex.c
common/pico_sync/critical_section.c
common/pico_time/time.c
common/pico_time/timeout_helper.c
rp2_common/hardware_timer/timer.c
common/pico_util/datetime.c
common/pico_util/pheap.c
common/pico_util/queue.c
rp2_common/hardware_uart/uart.c
rp2_common/hardware_clocks/clocks.c
rp2_common/hardware_pll/pll.c
rp2_common/hardware_vreg/vreg.c
rp2_common/hardware_watchdog/watchdog.c
rp2_common/hardware_ticks/ticks.c
rp2_common/pico_bootrom/bootrom.c
rp2_common/pico_bootrom/bootrom_lock.c
rp2_common/hardware_boot_lock/boot_lock.c
rp2_common/pico_flash/flash.c
rp2_common/hardware_xosc/xosc.c
rp2_common/hardware_divider/divider.c
rp2_common/pico_runtime/runtime.c
rp2_common/pico_runtime_init/runtime_init.c
rp2_common/pico_runtime_init/runtime_init_clocks.c
rp2_common/pico_runtime_init/runtime_init_stack_guard.c
rp2_common/pico_bit_ops/bit_ops_aeabi.S
rp2_common/pico_divider/divider_compiler.c
rp2_common/pico_double/double_math.c
rp2_common/pico_double/double_aeabi_dcp.S
rp2_common/pico_double/double_fma_dcp.S
rp2_common/pico_double/double_sci_m33.S
rp2_common/pico_double/double_conv_m33.S
rp2_common/pico_float/float_math.c
rp2_common/pico_float/float_conv32_vfp.S
rp2_common/pico_float/float_common_m33.S
rp2_common/pico_float/float_sci_m33_vfp.S
rp2_common/pico_malloc/malloc.c
rp2_common/pico_atomic/atomic.c
rp2_common/pico_cxx_options/new_delete.cpp
rp2_common/pico_standard_binary_info/standard_binary_info.c
rp2_common/pico_printf/printf.c
rp2_common/pico_crt0/crt0.S
rp2_common/pico_clib_interface/newlib_interface.c
rp2_common/pico_stdio/stdio.c
rp2_common/pico_stdio_uart/stdio_uart.c
../bs2_default_padded_checksummed.S

""")

path += [
    cwd + '/boards/include',

    cwd + '/rp2_common/cmsis/include',
    cwd + '/rp2_common/hardware_base/include',
    cwd + '/rp2_common/hardware_irq/include',
    cwd + '/rp2_common/hardware_boot_lock/include',
    cwd + '/rp2_common/hardware_sync/include',
    cwd + '/rp2_common/hardware_sync_spin_lock/include',
    cwd + '/rp2_common/pico_platform_compiler/include',
    cwd + '/rp2_common/pico_platform_panic/include',
    cwd + '/rp2_common/pico_platform_sections/include',
    cwd + '/rp2_common/boot_bootrom_headers/include',
    cwd + '/rp2_common/pico_bootrom/include',
    cwd + '/rp2_common/pico_flash/include',
    cwd + '/rp2_common/pico_stdio/include',
    cwd + '/rp2_common/hardware_timer/include',
    cwd + '/rp2_common/hardware_gpio/include',
    cwd + '/rp2_common/hardware_irq/include',
    cwd + '/rp2_common/hardware_uart/include',
    cwd + '/rp2_common/hardware_resets/include',
    cwd + '/rp2_common/pico_stdio_uart/include',
    cwd + '/rp2_common/pico_runtime/include',
    cwd + '/rp2_common/pico_runtime_init/include',
    cwd + '/rp2_common/pico_time_adapter/include',
    cwd + '/rp2_common/hardware_divider/include',
    cwd + '/rp2_common/hardware_clocks/include',
    cwd + '/rp2_common/hardware_ticks/include',
    cwd + '/rp2_common/hardware_pll/include',
    cwd + '/rp2_common/hardware_vreg/include',
    cwd + '/rp2_common/hardware_watchdog/include',
    cwd + '/rp2_common/hardware_xosc/include',
    cwd + '/rp2_common/pico_double/include',
    cwd + '/rp2_common/pico_float/include',
    cwd + '/rp2_common/pico_malloc/include',
    cwd + '/rp2_common/pico_printf/include',


    cwd + '/common/pico_stdlib_headers/include',
    cwd + '/common/pico_divider_headers/include',
    cwd + '/common/pico_binary_info/include',
    cwd + '/common/boot_picobin_headers/include',
    cwd + '/common/boot_picoboot_headers/include',

    cwd + '/rp2350/hardware_regs/include',
    cwd + '/rp2350/pico_platform/include',
    cwd + '/rp2350/hardware_structs/include',
    cwd + '/rp2350/boot_stage2/include',

    cwd + '/common/pico_base_headers/include',
    cwd + '/common/hardware_claim/include',
    cwd + '/common/pico_time/include',
    cwd + '/common/pico_sync/include',
    cwd + '/common/pico_util/include',

    cwd + '/rp2_common/hardware_dcp/include',


    ]

CPPDEFINES = [
  "LIB_BOOT_STAGE2_HEADERS=1",
  "LIB_PICO_ATOMIC=1",
  "LIB_PICO_BIT_OPS=1",
  "LIB_PICO_BIT_OPS_PICO=1",
  "LIB_PICO_CLIB_INTERFACE=1",
  "LIB_PICO_CRT0=1",
  "LIB_PICO_CXX_OPTIONS=1",
  "LIB_PICO_DIVIDER=1",
  "LIB_PICO_DIVIDER_COMPILER=1",
  "LIB_PICO_DOUBLE=1",
  "LIB_PICO_DOUBLE_PICO=1",
  "LIB_PICO_FLASH=1",
  "LIB_PICO_FLOAT=1",
  "LIB_PICO_FLOAT_PICO=1",
  "LIB_PICO_FLOAT_PICO_VFP=1",
  "LIB_PICO_INT64_OPS=1",
  "LIB_PICO_INT64_OPS_COMPILER=1",
  "LIB_PICO_MALLOC=1",
  "LIB_PICO_MEM_OPS=1",
  "LIB_PICO_MEM_OPS_COMPILER=1",
  "LIB_PICO_NEWLIB_INTERFACE=1",
  "LIB_PICO_PLATFORM=1",
  "LIB_PICO_PLATFORM_COMPILER=1",
  "LIB_PICO_PLATFORM_PANIC=1",
  "LIB_PICO_PLATFORM_SECTIONS=1",
  "LIB_PICO_PRINTF=1",
  "LIB_PICO_PRINTF_PICO=1",
  "LIB_PICO_RUNTIME=1",
  "LIB_PICO_RUNTIME_INIT=1",
  "LIB_PICO_STANDARD_BINARY_INFO=1",
  "LIB_PICO_STANDARD_LINK=1",
  "LIB_PICO_STDIO=1",
  "LIB_PICO_STDIO_UART=1",
  "LIB_PICO_STDLIB=1",
  "LIB_PICO_SYNC=1",
  "LIB_PICO_SYNC_CRITICAL_SECTION=1",
  "LIB_PICO_SYNC_MUTEX=1",
  "LIB_PICO_SYNC_SEM=1",
  "LIB_PICO_TIME=1",
  "LIB_PICO_TIME_ADAPTER=1",
  "LIB_PICO_UTIL=1",
  "PICO_32BIT=1",
  "PICO_BUILD=1",
  "PICO_COPY_TO_RAM=0",
  "PICO_CXX_ENABLE_EXCEPTIONS=0",
  "PICO_NO_FLASH=0",
  "PICO_NO_HARDWARE=0",
  "PICO_ON_DEVICE=1",
  "PICO_RP2350=1",
  "PICO_USE_BLOCKED_RAM=0",
  "PICO_BOARD=\"pico2\"",
  "LIB_CMSIS_CORE=1"
]

group = DefineGroup('raspberrypi-pico-rp2350-sdk', src, depend = [''], CPPPATH = path, CPPDEFINES = CPPDEFINES)


Return('group')

